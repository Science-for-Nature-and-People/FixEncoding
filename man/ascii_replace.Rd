% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ascii_replace.R
\name{ascii_replace}
\alias{ascii_replace}
\title{Replace invalid UTF-8 bytes.}
\usage{
ascii_replace(dset, enc_check_results, column_name, rep_str)
}
\arguments{
\item{dset}{A data.frame or data.table.}

\item{enc_check_results}{A list returned by calling
\code{check_column_encoding}.}

\item{column_name}{The name of an element in the list returned by
\code{check_column_encoding}, corresponding to a column header in
\code{dset} where encoding issues were detected (or possibly false
positives).}

\item{rep_str}{A character vector of the same length as
\code{enc_check_results[[column_name]]}. Strings within the character vector
consist of a single character to replace in the corresponding strings of
\code{enc_check_results[["column_name]]}. As of yet, the function only
handles replacement of single invalid bytes sequences per
\code{enc_check_results[["column_name]]} string. This vector must be
manually constructed, as there is no method for guessing the proper ASCII or
UTF-8 character to replace an invalid byte sequence. Care must be taken in
the order of replacement for strings with more than one invalid sequence.
Until muliple-sequence replacement is added, there is no way to know which
sequence will be replaced ahead of time. However, it is rare to see strings
with more than two invalid byte sequences, so simple trial and error should
suffice if this situation is encountered. Simply specify the correct
character in rep_str and re-run the code. The function is also only capable
of replacing single columns at a time. To replace additional columns, the
data.table returned by \code{ascii_replace} must be fed back into the
function as the value of \code{dset}--likely with a different value for
\code{rep_str}.}
}
\value{
A data.table with the same structure as \code{dset} but valid UTF-8
 bytes.
}
\description{
Replace invalid bytes detected by \code{check_column_encoding}
 with valid ASCII or UTF-8 characters. Involves manual construction of a
 replacement vector (see \code{rep_str}).
}

