% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ascii_replace.R
\name{ascii_replace}
\alias{ascii_replace}
\title{Find and replace invalid UTF-8 bytes.}
\usage{
ascii_replace(dataset, enc_check_results, column_name, rep_str)
}
\arguments{
\item{dataset}{A basic data.frame. Untested for newer objects from dplyr,
tibble, and data.table packages.}

\item{enc_check_results}{A matrix returned by calling \code{enc_check} with
\code{dataset} as the sole argument.}

\item{column_name}{A column header returned by \code{enc_check}, corresponding
to a column header in \code{dataset} where encoding issues were detected (or
possibly false positives).}

\item{rep_str}{A character vector whose elements are ASCII characters, though
any character can be used. These characters are used to replace the invalid
bytes displayed by \code{enc_check_results$column_name$unique_errors \%>\%
unname \%>\% unlist \%>\% unique}. Provisional: As of yet, the function only
handles replacement of single invalid bytes sequences per element of the
above code. This vector must be manually constructed, as there is no method
for guessing the proper ASCII or UTF-8 character to replace an invalid byte
sequence. Currently, the function is only capable of replacing single
columns at a time. To replace additional columns, the data.frame returned by
\code{ASCII_replace} must be fed back into the function as \code{dataset}.}
}
\value{
A data.frame with the same structure as \code{dataset} but valid
  UTF-8 bytes.
}
\description{
Replace invalid bytes detected by \code{enc_check} with valid
 ASCII or UTF-8 characters. Involves manual construction of a replacement
 vector (see \code{rep_str}).
}
\examples{
\dontrun{
map_matches <- enc_check(map_data)
# Use to construct rep_str = ASCII_replacement
map_matches$Title$unique_errors \%>\% unname \%>\% unlist \%>\% unique
ASCII_replacement <- c(rep("a", times = 3),
                       "e",
                       rep("'", times = 12))
map_data_fixed <- ascii_replace(map_data,
                                map_matches,
                                "Title",
                                ASCII_replacement)
}
}

